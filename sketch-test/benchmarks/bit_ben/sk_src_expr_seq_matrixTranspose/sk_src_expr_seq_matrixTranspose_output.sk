/* BEGIN PACKAGE ANONYMOUS*/
/*sk_src_..nspose.sk:17*/

void tiledTranspose (bit[100] input, ref bit[100] _out)  implements pbe_tiledTranspose
{
  _out = ((bit[100])0);
  _out = ((bit[100])0);
  _out[0] = input[0];
  _out[1] = input[10];
  _out[2] = input[20];
  _out[3] = input[30];
  _out[10] = input[1];
  _out[11] = input[11];
  _out[12] = input[21];
  _out[13] = input[31];
  _out[20] = input[2];
  _out[21] = input[12];
  _out[22] = input[22];
  _out[23] = input[32];
  _out[30] = input[3];
  _out[31] = input[13];
  _out[32] = input[23];
  _out[33] = input[33];
  _out[40] = input[4];
  _out[41] = input[14];
  _out[42] = input[24];
  _out[43] = input[34];
  _out[50] = input[5];
  _out[51] = input[15];
  _out[52] = input[25];
  _out[53] = input[35];
  _out[60] = input[6];
  _out[61] = input[16];
  _out[62] = input[26];
  _out[63] = input[36];
  _out[70] = input[7];
  _out[71] = input[17];
  _out[72] = input[27];
  _out[73] = input[37];
  _out[80] = input[8];
  _out[81] = input[18];
  _out[82] = input[28];
  _out[83] = input[38];
  _out[84] = input[48];
  _out[85] = input[58];
  _out[86] = input[68];
  _out[87] = input[78];
  _out[88] = input[88];
  _out[89] = input[98];
  _out[90] = input[9];
  _out[91] = input[19];
  _out[92] = input[29];
  _out[93] = input[39];
  _out[94] = input[49];
  _out[95] = input[59];
  _out[96] = input[69];
  _out[97] = input[79];
  _out[98] = input[89];
  _out[99] = input[99];
  return;
}
/*sk_src_..nspose.sk:7*/

void transpose (bit[100] input, ref bit[100] _out)/*sk_src_..nspose.sk:7*/
{
  _out = ((bit[100])0);
  _out = ((bit[100])0);
  for(int i = 0; i < 10; i = i + 1)/*Canonical*/
  {
    for(int j = 0; j < 10; j = j + 1)/*Canonical*/
    {
      _out[(i * 10) + j] = input[(j * 10) + i];
    }
  }
  return;
}
/* END PACKAGE ANONYMOUS*/
