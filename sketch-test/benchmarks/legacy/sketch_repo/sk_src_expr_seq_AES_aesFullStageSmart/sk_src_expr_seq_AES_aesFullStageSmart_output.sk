void MixColumnsSK (bit[32] input, ref bit[32] _out)  implements pbe_MixColumnsSK
{
  _out = ((bit[32])0);
  bit[32] t1 = ((input << 1) & ({0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1})) ^ (input & ({0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}));
  bit[32] m1 = (input >> 7) & ({1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0});
  bit[32] m2 = (m1 << 3) | m1;
  bit[32] t1_0 = ((input << 1) & ({0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1})) ^ (input & ({1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}));
  bit[32] m1_0 = (input >> 7) & ({1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0});
  bit[32] m2_0 = (m1_0 << 3) | m1_0;
  bit[32] o2_s4 = t1_0 ^ ((m2_0 << 1) | m2_0);
  bit[32] t1_1 = ((input << 1) & ({0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0})) ^ (input & ({1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}));
  bit[32] m1_1 = (input >> 7) & ({0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});
  bit[32] m2_1 = (m1_1 << 3) | m1_1;
  bit[32] o3_s6 = t1_1 ^ ((m2_1 << 1) | m2_1);
  bit[32] tmp = o2_s4 << 24;
  bit[32] tmp2 = o2_s4 >> 8;
  bit[32] _out_s8 = ((bit[32])0);
  int i = 0;
  for(i = 0; i < 32; i = i + 1)
  {
    _out_s8[i] = (i < 24 ? tmp2[i] : tmp[i]);
  }
  bit[32] tmp_0 = o3_s6 << 8;
  bit[32] tmp2_0 = o3_s6 >> 24;
  bit[32] _out_s10 = ((bit[32])0);
  int i_0 = 0;
  for(i_0 = 0; i_0 < 32; i_0 = i_0 + 1)
  {
    _out_s10[i_0] = (i_0 < 8 ? tmp2_0[i_0] : tmp_0[i_0]);
  }
  bit[32] tmp_1 = o3_s6 << 16;
  bit[32] tmp2_1 = o3_s6 >> 16;
  bit[32] _out_s12 = ((bit[32])0);
  int i_1 = 0;
  for(i_1 = 0; i_1 < 32; i_1 = i_1 + 1)
  {
    _out_s12[i_1] = (i_1 < 16 ? tmp2_1[i_1] : tmp_1[i_1]);
  }
  _out = (((t1 ^ ((m2 << 1) | m2)) ^ _out_s8) ^ _out_s10) ^ _out_s12;
  return;
}
