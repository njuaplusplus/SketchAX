//@Description Sketch to reverse all the bits in a word in log-time using log-shifting.

pragma options "--bnd-cbits 3 ";

int W = 8;

bit[W] reverseSketch1(bit[W] in) {

    bit[W]  t = in;
    int s = 1;
    int r = ??;
    repeat(??){
        bit[W] tmp1 = (t << s);
        bit[W] tmp2 = (t >> s);
        t = tmp1 {|} tmp2; // The {|} operator is syntactic sugar for m=??, (tmp1&m | tmp2&!m).
        s = s*r;
    }
    return t;
}

// harness void constraints() {
//     assert reverseSketch1({1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1})
//                        == {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};
//     assert reverseSketch1({1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1})
//                        == {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1};
//     assert reverseSketch1({1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1})
//                        == {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1};
// //     assert_all_rotations(W, {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
// //                             {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1});
// //     assert_all_rotations(W, {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
// //                             {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1});
// //     assert_all_rotations(W, {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
// //                             {1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1});
// }
// 
// void assert_all_rotations(int N, bit[N] x, bit[N] y) {
//     assert reverseSketch1(x) == y;
//     for (int i=1; i<N; i++) {
//         bit t = x[N-1];
//         x[1::N-1] = x[0::N-1];
//         x[0] = t;
// 
//         t = y[0];
//         y[0::N-1] = y[1::N-1];
//         y[N-1] = t;
// 
//         assert reverseSketch1(x) == y;
//     }
// }
